@model Veil.Models.AddressViewModel

@{
    ViewBag.Title = "Manage Addresses";
}

<div class="row">
    <div class="column">
        <h2>@ViewBag.Title</h2>
    </div>
</div>

@if (Model.Addresses != null && Model.Addresses.Any())
{
    <div class="row panel">
        <div class="column">
            <h4>Your Addresses</h4>

            <div class="row collapse">
                @using (Html.BeginForm("EditAddress", "Manage", FormMethod.Get))
                {
                    <div class="medium-8 columns">
                        @Html.DropDownList("AddressId", Model.Addresses, new { aria_label = "Addresses" })
                    </div>

                    <div class="medium-4 columns">
                        <button type="submit" class="postfix">Edit Address</button>
                    </div>
                }
            </div>

            <div class="row collapse">
                @using (Html.BeginForm("DeleteAddress", "Manage", FormMethod.Get))
                {
                    @Html.AntiForgeryToken()

                    <input type="hidden" id="deleteAddressId" name="id" />

                    <div class="medium-4 columns right end">
                        <button type="submit" class="postfix alert">Delete Address</button>
                    </div>
                }
            </div>
        </div>
    </div>
}

@using (Html.BeginForm("CreateAddress", "Manage", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="row panel">
        <div class="column">
            <h4>New Address</h4>

            @{ Html.RenderPartial("AddressViewModel/_AddressFormFields", Model); }

            <button type="submit">Add Address</button>
        </div>
    </div>
}

@section scripts
{
    <script type="text/javascript">
        $(function () {
            $('#AddressId').change(function ()
            {
                var selectedAddress = $('option:selected', this).val();

                $('#deleteAddressId').val(selectedAddress);
            }).
            trigger('change'); // Manually trigger the initial change
        });
    </script>

    <script type="text/javascript">
        // Simple script to disable all the optgroups except for the one for the selected country
        $(function () {

            $('#@nameof(Model.CountryCode)').change(function () {

                    var selectedCountryName = $('option:selected', this).text();

                    $('#@nameof(Model.ProvinceCode) > optgroup').each(function () {

                        if (this.label !== selectedCountryName) {
                            $(this).prop('disabled', true);
                        } else {
                            $(this).prop('disabled', false);

                            if ($('option:selected', this)[0] === undefined) {
                                $('option', this).first().prop('selected', true);
                            }
                        }
                    });
                }).
                trigger('change'); // Manually trigger the initial change
        });
    </script>
}