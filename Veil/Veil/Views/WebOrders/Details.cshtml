@using Veil.DataModels
@using Veil.DataModels.Models
@using Veil.Extensions
@model WebOrder

@{
    ViewBag.Title = $"Order {Model.Id}";
}

<div class="row">
    <div class="column">
        <h2>@ViewBag.Title</h2>
    </div>
</div>

<div class="row">
    <div class="medium-6 columns">
        <dl>
            <dt>Billing Information</dt>
            <dd>@Model.Member.UserAccount.FirstName @Model.Member.UserAccount.LastName</dd>
            <dd>@Model.CreditCardLast4Digits.FormatLast4Digits()</dd>
        </dl>
    </div>
    <div class="medium-6 columns">
        <dl>
            <dt>Shipping Information</dt>
            <dd>@Model.Member.UserAccount.FirstName @Model.Member.UserAccount.LastName</dd>
            <dd>@Model.Address.StreetAddress</dd>
            
            @if (Model.Address.POBoxNumber != null)
            {
                <dd>PO Box: @Model.Address.POBoxNumber</dd>
            }

            <dd>@Model.Address.City, @Model.Province.Name @Model.Address.PostalCode</dd>
            <dd>@Model.Country.CountryName</dd>
        </dl>
    </div>
</div>

<div class="row">
    <div class="column">
        <dl>
            <dt>Order Details</dt>
            <dd>
                <table>
                    <tr><td>Order Number</td><td>@Model.Id</td></tr>
                    <tr><td>Order Date</td><td>@Model.OrderDate</td></tr>
                    <tr><td>Order Status</td><td>@Html.DisplayFor(m => m.OrderStatus)</td></tr>
                    @if (Model.ProcessedDate != null)
                    {
                        <tr><td>Processing Date</td><td>@Model.ProcessedDate</td></tr>
                    }
                    @if (Model.ReasonForCancellationMessage != null)
                    {
                        <tr><td>Reason for Cancellation</td><td>@Model.ReasonForCancellationMessage</td></tr>
                    }
                </table>
            </dd>
            <dd>
                <table style="width: 100%;">
                    <tr><th>Title</th><th>Platform</th><th>New/Used</th><th>Quantity</th><th class="text-right">Unit Price</th><th class="text-right">Total Price</th></tr>

                    @foreach (var item in Model.OrderItems)
                    {
                        <tr>
                            <td>@item.Product.Name</td>
                            <td>
                                @(item.Product is PhysicalGameProduct
                                      ? ((PhysicalGameProduct) item.Product).Platform.PlatformName
                                      : "")
                            </td>
                            <td>@(item.IsNew ? "New" : "Used")</td>
                            <td>@item.Quantity</td>
                            <td class="text-right">@item.ListPrice.ToString("C")</td>
                            <td class="text-right">@((item.ListPrice*item.Quantity).ToString("C"))</td>
                        </tr>
                    }

                    <tr><td colspan="6"><hr/></td></tr>
                    <tr><td colspan="5">Item Total</td><td class="text-right">@Model.OrderSubtotal.ToString("C")</td></tr>
                    <tr><td colspan="5">Shipping and Handling</td><td class="text-right">@Model.ShippingCost.ToString("C")</td></tr>
                    <tr><td colspan="5">Tax</td><td class="text-right">@Model.TaxAmount.ToString("C")</td></tr>
                    <tr><td colspan="5"><strong>Order Total</strong></td><td class="text-right"><strong>@((Model.OrderSubtotal + Model.ShippingCost + Model.TaxAmount).ToString("C"))</strong></td></tr>
                </table>
            </dd>
        </dl>
        @if (User.IsInRole(VeilRoles.MEMBER_ROLE) &&
                        Model.OrderStatus == OrderStatus.PendingProcessing)
        {
            <div class="row">
                <div class="column">
                    @using (Html.BeginForm("Cancel", "WebOrders", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.Id)
                        <button type="submit" class="small alert">Cancel Order</button>
                    }
                </div>
            </div>
        }
        @if (User.IsEmployeeOrAdmin())
        {
            <div class="row">
                <div class="medium-8 columns">
                    @if (Model.OrderStatus == OrderStatus.PendingProcessing ||
                            Model.OrderStatus == OrderStatus.BeingProcessed)
                    {
                        using (Html.BeginForm("SetStatusCancelled", "WebOrders", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(m => m.Id)
                            <div class="row collapse">
                                @Html.LabelFor(m => m.ReasonForCancellationMessage)
                                <div class="small-8 columns">
                                    @Html.EditorFor(m => m.ReasonForCancellationMessage)
                                </div>
                                <div class="small-4 columns">
                                    <button type="submit" class="alert postfix">Cancel Order</button>
                                </div>
                            </div>
                        }
                    }
                </div>
                <div class="small-4 columns">
                    @if (Model.OrderStatus == OrderStatus.PendingProcessing)
                    {
                        using (Html.BeginForm("SetStatusProcessing", "WebOrders", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(m => m.Id)
                            <button type="submit" class="small expand">Begin Processing</button>
                        }
                    }
                    @if (Model.OrderStatus == OrderStatus.BeingProcessed)
                    {
                        using (Html.BeginForm("SetStatusProcessed", "WebOrders", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(m => m.Id)
                            <button type="submit" class="small expand success">Complete Processing</button>
                        }
                    }
                </div>
            </div>
        }
    </div>
</div>
