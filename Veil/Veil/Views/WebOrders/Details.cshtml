@using Veil.DataModels
@using Veil.DataModels.Models
@using Veil.Extensions
@model Veil.DataModels.Models.WebOrder

@{
    ViewBag.Title = $"Order {Model.Id}";
}

<div class="row">
    <div class="column">
        <h2>@ViewBag.Title</h2>
    </div>
</div>

<div class="row">
    <div class="medium-6 columns">
        <dl>
            <dt>Billing Information</dt>
            <dd>@Model.Member.UserAccount.FirstName @Model.Member.UserAccount.LastName</dd>
            <dd>@Model.CreditCardLast4Digits.FormatLast4Digits()</dd>
        </dl>
    </div>
    <div class="medium-6 columns">
        <dl>
            <dt>Shipping Information</dt>
            <dd>@Model.Member.UserAccount.FirstName @Model.Member.UserAccount.LastName</dd>
            <dd>@Model.Address.StreetAddress</dd>
            
            @if (Model.Address.POBoxNumber != null)
            {
                <dd>PO Box: @Model.Address.POBoxNumber</dd>
            }

            <dd>@Model.Address.City, @Model.Province.Name @Model.Address.PostalCode</dd>
            <dd>@Model.Country.CountryName</dd>
        </dl>
    </div>
</div>

<div class="row">
    <div class="column">
        <dl>
            <dt>Order Details</dt>
            <dd>
                <table>
                    <tr><td>Order Number</td><td>@Model.Id</td></tr>
                    <tr><td>Order Date</td><td>@Model.OrderDate</td></tr>
                    <tr><td>Order Status</td><td>@Model.OrderStatus</td></tr>
                </table>
            </dd>
            <dd>
                <table style="width: 100%;">
                    <tr><th>Title</th><th>Platform</th><th>New/Used</th><th>Quantity</th><th class="text-right">Unit Price</th><th class="text-right">Total Price</th></tr>

                    @foreach (var item in Model.OrderItems)
                    {
                        <tr>
                            <td>@item.Product.Name</td>
                            <td>@(item.Product is PhysicalGameProduct
                                ? ((PhysicalGameProduct)item.Product).Platform.PlatformName
                                : "")
                            </td>
                            <td>@item.IsNew</td>
                            <td>@item.Quantity</td>
                            <td class="text-right">@item.ListPrice.ToString("C")</td>
                            <td class="text-right">@((item.ListPrice*item.Quantity).ToString("C"))</td>
                        </tr>
                    }

                    <tr><td colspan="6"><hr/></td></tr>
                    <tr><td colspan="5">Item Total</td><td class="text-right">@* TODO: make this work *@</td></tr>
                    <tr><td colspan="5">Shipping and Handling</td><td class="text-right">@* TODO: make this work *@</td></tr>
                    <tr><td colspan="5">Tax</td><td class="text-right">@* TODO: make this work *@</td></tr>
                    <tr><td colspan="5"><strong>Order Total</strong></td><td class="text-right"><strong>@* TODO: make this work *@</strong></td></tr>
                </table>
            </dd>
        </dl>
        @{
            string cancelButtonClasses = "alert";
            if (Model.OrderStatus == OrderStatus.Processed ||
                Model.OrderStatus == OrderStatus.EmployeeCancelled ||
                Model.OrderStatus == OrderStatus.UserCancelled ||
                (User.IsInRole(VeilRoles.MEMBER_ROLE) && Model.OrderStatus == OrderStatus.BeingProcessed))
            {
                cancelButtonClasses += " disabled";
                <button class="@cancelButtonClasses">Cancel Order</button>
            }
            else
            {
                using (Html.BeginForm("CancelOrder", "WebOrders", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.Id)
                    <button type="submit" class="@cancelButtonClasses">Cancel Order</button>
                }
            }
        }
        @* TODO: Put order processing stuff here *@
    </div>
</div>