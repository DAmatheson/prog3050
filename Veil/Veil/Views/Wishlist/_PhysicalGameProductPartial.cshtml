@using Veil.Models
@using Veil.DataModels.Models
@model WishlistPhysicalGameProductViewModel

<div class="row panel" data-equalizer>
    <div class="small-1 columns" data-equalizer-watch>
        <h4 class="platform-transform">@Model.GameProduct.Platform.PlatformName</h4>
    </div>
    <div class="small-2 columns" data-equalizer-watch>
        <img src="@Model.GameProduct.BoxArtImageURL" alt="@Model.GameProduct.PlatformCode Box Art" />
    </div>
    <div class="small-6 columns" data-equalizer-watch>
        <h5>@Html.ActionLink(Model.GameProduct.Name, "Details", "Games", new { id = Model.GameProduct.GameId }, null)  </h5>
        <p class="margin-bottom-0 padding-bottom-half-em">@Model.GameProduct.SKUDescription</p>
        <p class="margin-bottom-0"><strong>Developer:</strong>&nbsp;@Model.GameProduct.Developer.Name</p>
        <p class="margin-bottom-0"><strong>Publisher:</strong>&nbsp;@Model.GameProduct.Publisher.Name</p>
    </div>
    <div class="small-3 columns" data-equalizer-watch>
        @{
            var rating = Model.GameProduct.AverageRating;
            if (rating.HasValue)
            {
                <div class="row">
                    <strong class="label info column bordered">Average Rating</strong>
                </div>
                <div class="row">
                    <div class="column text-center margin-bottom-1 bordered rating">
                        @Html.Partial("_RatingStarsPartial", rating)
                    </div>
                </div>
            }

            String buyNewClasses = "button expand small success margin-bottom-0";

            if (Model.NewIsInCart)
            {
                <a class="@buyNewClasses disabled">Buy Used @($"{Model.GameProduct.NewWebPrice:C} (in your cart)")</a>
            }
            else if (Model.GameProduct.ProductAvailabilityStatus == AvailabilityStatus.DiscontinuedByManufacturer &&
                    Model.GameProduct.NewInventory < 1)
            {
                <a class="@buyNewClasses disabled">Buy New @($"{Model.GameProduct.NewWebPrice:C} (unavailable)")</a>
            }
            else
            {
                @Html.ActionLink($"Buy New {Model.GameProduct.NewWebPrice:C}", "AddItem", "Cart", new { productId = Model.GameProduct.Id, isNew = true }, new { @class = buyNewClasses });
            }

            if (Model.GameProduct.UsedWebPrice.HasValue)
            {
                String buyUsedClasses = "button expand small margin-bottom-0";

                if (Model.UsedIsInCart)
                {
                    <a class="@buyUsedClasses disabled">Buy Used @($"{Model.GameProduct.UsedWebPrice.Value:C} (in your cart)")</a>
                }
                else if (Model.GameProduct.UsedInventory < 1)
                {
                    <a class="@buyUsedClasses disabled">Buy Used @($"{Model.GameProduct.UsedWebPrice.Value:C} (unavailable)")</a>
                }
                else
                {
                    Html.ActionLink($"Buy Used {Model.GameProduct.UsedWebPrice.Value:C}", "AddItem", "Cart", new { productId = Model.GameProduct.Id, isNew = false }, new { @class = buyUsedClasses });
                }
            }

            string wishlistClasses = "button expand small info margin-bottom-0";
            if (Model.MemberIsCurrentUser)
            {
                @Html.ActionLink("Remove from Wishlist", "Remove", "Wishlist", new { itemId = Model.GameProduct.Id }, new { @class = wishlistClasses })
            }
            else if (Model.ProductIsOnWishlist)
            {
                <a class="@wishlistClasses disabled">On Your Wishlist</a>
            }
            else
            {
                @Html.ActionLink("Add to Your Wishlist", "Add", "Wishlist", new { itemId = Model.GameProduct.Id }, new { @class = wishlistClasses })
            }
        }
    </div>
</div>