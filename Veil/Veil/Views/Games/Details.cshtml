@using Veil.Extensions
@using Veil.DataModels.Models
@model Game

@{
    ViewBag.Title = Model.Name;
}

<div class="row">
    <div class="small-12 columns">
        <h2>@ViewBag.Title</h2>
    </div>
</div>
<div class="row padding-bottom-1" data-equalizer>
    <div class="small-12 medium-6 columns" data-equalizer-watch>
        @{
            if (!string.IsNullOrWhiteSpace(Model.TrailerURL))
            {
                <embed class="width-100 height-100 min-height-14" src="@Model.TrailerURL" />
            }
            else
            {
                <img class="width-100" src="@Model.PrimaryImageURL" alt="Game Image" />
            }
        }
    </div>
    <div class="small-10 medium-5 columns" data-equalizer-watch>
        @if (Model.GameSKUs.Any())
        {
            var gameRating = Model.AverageRating;
            if (gameRating.HasValue)
            {
                <div class="row">
                    <strong class="label info column bordered">Average Rating</strong>
                </div>
                <div class="row">
                    <div class="column text-center margin-bottom-1 bordered rating">
                        @Html.Partial("_RatingStarsPartial", gameRating)
                    </div>
                </div>
            }
            <p class="margin-bottom-0"><strong>Release Date: @Model.GameSKUs.Min(gp => gp.ReleaseDate).ToString("MMM dd, yyyy")</strong></p>
        }
        <p class="margin-bottom-0">
            <strong>Players: @Model.MinimumPlayerCount</strong>
            @if (Model.MaximumPlayerCount > Model.MinimumPlayerCount)
            {
                <strong> - @Model.MaximumPlayerCount</strong>
            }
        </p>
        <h4>Tags</h4>
        <ul class="inline-list">
            @foreach (var tag in Model.Tags)
            {
                <li><a href="@Url.Action("AdvancedSearch", new { tags = tag.Name })" class="button tiny secondary">@tag.Name</a></li>
            }
            @if (User.IsEmployeeOrAdmin())
            {
                // TODO: Dropdown and + button to add a tag
            }
        </ul>
    </div>
    <div class="small-2 medium-1 columns" data-equalizer-watch>
        <img class="right width-100" src="@Model.Rating.ImageURL" alt="@Model.Rating.Description" />
    </div>
</div>
<div class="row">
    <div class="column">
        <p class="indent">@Model.LongDescription</p>
    </div>
</div>

@if (User.IsEmployeeOrAdmin())
{
    <div class="row">
        <div class="small-4 medium-2 columns">
            @Html.ActionLink("Delete Game", "Delete", new { id = Model.Id }, new { @class = "button expand small alert" })
        </div>

        <div class="small-4 medium-2 medium-offset-2 columns">
            @Html.ActionLink("Edit Game", "Edit", new { id = Model.Id }, new { @class = "button expand small" })
        </div>

        <div class="small-4 medium-3 columns">
            @Html.ActionLink("Add Physical SKU", "CreatePhysicalSKU", "GameProducts", new { id = Model.Id }, new { @class = "button expand small" })
        </div>

        <div class="small-4 medium-3 columns">
            @Html.ActionLink("Add Download SKU", "CreateDownloadSKU", "GameProducts", new { id = Model.Id }, new { @class = "button expand small" })
        </div>
    </div>
}

@foreach (var physicalGameProduct in Model.GameSKUs.OfType<PhysicalGameProduct>())
{
    <div class="row panel" data-equalizer>
        @{ Html.RenderPartial("~/Views/GameProducts/_GameProductPartial.cshtml", physicalGameProduct); }
        @{ Html.RenderAction("RenderPhysicalGameProductPartial", "GameProducts" ,physicalGameProduct); }
    </div>
}

@foreach (var downloadGameProduct in Model.GameSKUs.OfType<DownloadGameProduct>())
{
    <div class="row panel" data-equalizer>
        @{ Html.RenderPartial("~/Views/GameProducts/_GameProductPartial.cshtml", downloadGameProduct); }
        @{ Html.RenderPartial("~/Views/GameProducts/_DownloadGameProduct.cshtml", downloadGameProduct); }
    </div>
}

@* TODO: #53 Member Creates or Edits Rating, optionally including a Review *@
<div class="row">
    <div class="small-12 columns">
        <h3>Ratings and Reviews</h3>
    </div>
</div>
<div class="row panel">
    <div class="column">
        <h4>Rate the Game</h4>
        <input type="radio" name="rating" value="1"><label>1</label>
        <input type="radio" name="rating" value="2"><label>2</label>
        <input type="radio" name="rating" value="3"><label>3</label>
        <input type="radio" name="rating" value="4"><label>4</label>
        <input type="radio" name="rating" value="5"><label>5</label>
        <textarea>Write stuff here</textarea>
        <button class="right" type="submit">Submit Rating</button>
    </div>
</div>

@* TODO: Implement or remove extra feature of filtering reviews based on available time *@
<div class="row">
    <div class="columns">
        <span>Filter Reviews by Format</span>
        <select>
            <option>PS4</option>
            <option>Xbox One</option>
            <option>Windows</option>
        </select>
        <button type="submit">Apply Filter</button>
    </div>
</div>

@foreach (var review in Model.AllReviews)
{
    <div class="row panel">
        <div class="small-3 columns">
            <h5>@review.Member.UserAccount.UserName</h5>
            <p>Format: @review.ProductReviewed.Name</p>
            <div class="rating panel">
                <strong>Average Rating:</strong><br />
                @Html.Partial("_RatingStarsPartial", review.Rating)
            </div>
        </div>
        <div class="small-9 columns">
            @{
                if (review.ReviewStatus == ReviewStatus.Approved)
                {
                    <p>@review.ReviewText</p>
                }
                else if (review.ReviewStatus == ReviewStatus.Denied)
                {
                    <p><em>This review has been flagged as inappropriate.</em></p>
                }
                else if (review.ReviewStatus == ReviewStatus.Denied)
                {
                    <p><em>This review is pending approval.</em></p>
                }
            }
        </div>
    </div>
}