@model Veil.DataModels.Models.Game
@using Veil.DataModels
@using Veil.DataModels.Models

@{
    ViewBag.Title = Model.Name;
}

<div class="row">
    <div class="small-12 columns">
        <h2>@ViewBag.Title</h2>
    </div>
</div>
<div class="row padding-bottom-1" data-equalizer>
    <div class="small-12 medium-6 columns" data-equalizer-watch>
        @{
            if (!string.IsNullOrWhiteSpace(Model.TrailerURL))
            {
                <embed class="width-100 height-100 min-height-14" src="@Model.TrailerURL" />
            }
            else
            {
                <img class="width-100" src="@Model.PrimaryImageURL" alt="Game Image" />
            }
        }
    </div>
    <div class="small-10 medium-5 columns" data-equalizer-watch>
        @if (Model.GameSKUs.Any())
        {
            <p class="margin-bottom-0"><strong>Release Date: @Model.GameSKUs.Min(gp => gp.ReleaseDate).ToString("MMM dd, yyyy")</strong></p>
        }
        <p class="margin-bottom-0">
            <strong>Players: @Model.MinimumPlayerCount</strong>
            @if (Model.MaximumPlayerCount > Model.MinimumPlayerCount)
            {
                <strong> - @Model.MaximumPlayerCount</strong>
            }
        </p>
        <h4>Tags</h4>
        <ul class="inline-list">
            @foreach (var tag in Model.Tags)
            {
                <li><a href="@Url.Action("AdvancedSearch", new { tags = tag.Name })" class="button tiny secondary">@tag.Name</a></li>
            }
            @if (User.IsInRole(VeilRoles.ADMIN_ROLE) ||
                User.IsInRole(VeilRoles.EMPLOYEE_ROLE))
            {
                // TODO: Dropdown and + button to add a tag
            }
        </ul>
    </div>
    <div class="small-2 medium-1 columns" data-equalizer-watch>
        <img class="right width-100" src="@Model.Rating.ImageURL" alt="@Model.Rating.Description" />
    </div>
</div>
<div class="row">
    <div class="column">
        <p class="indent">@Model.LongDescription</p>
    </div>
</div>

@if (User.IsInRole(VeilRoles.EMPLOYEE_ROLE) ||
    User.IsInRole(VeilRoles.ADMIN_ROLE))
{
    <div class="row">
        <div class="small-4 medium-2 columns">
            @Html.ActionLink("Delete Game", "Delete", new { id = Model.Id }, new { @class = "button expand small alert" })
        </div>

        <div class="small-4 medium-2 medium-offset-2 columns">
            @Html.ActionLink("Edit Game", "Edit", new { id = Model.Id }, new { @class = "button expand small" })
        </div>

        <div class="small-6 medium-3 columns">
            @Html.ActionLink("Add Physical SKU", "CreatePhysicalGameProduct", new { id = Model.Id }, new { @class = "button expand small" })
        </div>

        <div class="small-6 medium-3 columns">
            @Html.ActionLink("Add Download SKU", "CreateDownloadGameProduct", new { id = Model.Id }, new { @class = "button expand small" })
        </div>
    </div>
}

@foreach (var gameProduct in Model.GameSKUs)
{
    <div class="row panel" data-equalizer>
        <div class="small-1 columns" data-equalizer-watch>
            <h4 class="platform-transform">@gameProduct.Platform.PlatformName</h4>
        </div>
        <div class="small-2 columns" data-equalizer-watch>
            <img src="@gameProduct.BoxArtImageURL" alt="@gameProduct.PlatformCode Box Art" />
        </div>
        <div class="small-6 columns" data-equalizer-watch>
            <h5>@gameProduct.Name</h5>
            <p class="margin-bottom-0 padding-bottom-half-em">@gameProduct.SKUDescription</p>
            <p class="margin-bottom-0"><strong>Developer:</strong>&nbsp;@gameProduct.Developer.Name</p>
            <p class="margin-bottom-0"><strong>Publisher:</strong>&nbsp;@gameProduct.Publisher.Name</p>
        </div>
        <div class="small-3 columns" data-equalizer-watch>
            @{ var rating = gameProduct.AverageRating; }
            @if (rating.HasValue)
            {
                <div class="row">
                    <strong class="label info column bordered">Average Rating</strong>
                </div>
                <div class="row">
                    <div class="column text-center margin-bottom-1 bordered rating">
                        @Html.Partial("_RatingStarsPartial", rating)
                    </div>
                </div>
            }
            @*
                If the user is an employee - show buttons to Edit or Delete the GameProduct
                If member or anonymous and:
                    The format is PhysicalGameProduct - show Buy New/Used and Add to Wishlist buttons
                        Disable Buy New if out of stock and we can't get more
                        Disable Buy Used if out of stock
                        Do not show buy used if there is no used price
                    The format is DownloadGameProduct - show a button to download the product
            *@
            @if (User.IsInRole(VeilRoles.EMPLOYEE_ROLE) ||
                User.IsInRole(VeilRoles.ADMIN_ROLE))
            {
                @Html.ActionLink("Edit", "EditGameProduct", new { id = gameProduct.Id }, new { @class = "button expand small" })
                @Html.ActionLink("Delete", "DeleteGameProduct", new { id = gameProduct.Id }, new { @class = "button expand small alert" })
            }
            else
            {
                if (gameProduct is PhysicalGameProduct)
                {
                    String buyNewClasses = "button expand small success margin-bottom-0";
                    if (gameProduct.ProductAvailabilityStatus == AvailabilityStatus.DiscontinuedByManufacturer &&
                        (gameProduct as PhysicalGameProduct).NewInventory < 1)
                    {
                        <a class="@buyNewClasses disabled">Buy New @gameProduct.NewWebPrice.ToString("C")</a>
                    }
                    else
                    {
                        @Html.ActionLink("Buy New " + gameProduct.NewWebPrice.ToString("C"), "AddItem", "Cart", new { productId = gameProduct.Id, isNew = true }, new { @class = buyNewClasses })
                    }

                    if (gameProduct.UsedWebPrice.HasValue)
                    {
                        String buyUsedClasses = "button expand small margin-bottom-0";

                        if ((gameProduct as PhysicalGameProduct).UsedInventory < 1)
                        {
                            <a class="@buyUsedClasses disabled">Buy Used @gameProduct.UsedWebPrice.Value.ToString("C")</a>
                        }
                        else
                        {
                            @Html.ActionLink("Buy Used " + gameProduct.UsedWebPrice.Value.ToString("C"), "AddItem", "Cart", new { productId = gameProduct.Id, isNew = false }, new { @class = buyUsedClasses });
                        }
                    }

                    @Html.ActionLink("Add to Wishlist", "Add", "Wishlist",
                             new { itemId = gameProduct.Id }, new { @class = "button expand small info margin-bottom-0" })
                }
                else if (gameProduct is DownloadGameProduct)
                {
                    <a href="@(gameProduct as DownloadGameProduct).DownloadLink" class="button expand success">Free Download</a>
                }
            }
        </div>
    </div>
}

@* TODO: #53 Member Creates or Edits Rating, optionally including a Review *@
<div class="row">
    <div class="small-12 columns">
        <h3>Ratings and Reviews</h3>
    </div>
</div>
<div class="row panel">
    <div class="column">
        <h4>Rate the Game</h4>
        <input type="radio" name="rating" value="1"><label>1</label>
        <input type="radio" name="rating" value="2"><label>2</label>
        <input type="radio" name="rating" value="3"><label>3</label>
        <input type="radio" name="rating" value="4"><label>4</label>
        <input type="radio" name="rating" value="5"><label>5</label>
        <textarea>Write stuff here</textarea>
        <button class="right" type="submit">Submit Rating</button>
    </div>
</div>

@* TODO: Implement or remove extra feature of filtering reviews based on available time *@
<div class="row">
    <div class="columns">
        <span>Filter Reviews by Format</span>
        <select>
            <option>PS4</option>
            <option>Xbox One</option>
            <option>Windows</option>
        </select>
        <button type="submit">Apply Filter</button>
    </div>
</div>

@foreach (var review in Model.AllReviews)
{
    <div class="row panel">
        <div class="small-3 columns">
            <h5>@review.Member.UserAccount.UserName</h5>
            <p>Format: @review.ProductReviewed.Name</p>
            <div class="rating panel">
                <strong>Average Rating:</strong><br />
                @Html.Partial("_RatingStarsPartial", review.Rating)
            </div>
        </div>
        <div class="small-9 columns">
            @{
                if (review.ReviewStatus == Veil.DataModels.Models.ReviewStatus.Approved)
                {
                    <p>@review.ReviewText</p>
                }
                else if (review.ReviewStatus == Veil.DataModels.Models.ReviewStatus.Denied)
                {
                    <p><em>This review has been flagged as inappropriate.</em></p>
                }
                else if (review.ReviewStatus == Veil.DataModels.Models.ReviewStatus.Denied)
                {
                    <p><em>This review is pending approval.</em></p>
                }
            }
        </div>
    </div>
}