@using Veil.DataModels
@using Veil.Extensions
@using Veil.DataModels.Models
@model Game

@{
    ViewBag.Title = Model.Name;
}

<div class="row">
    <div class="column">
        <h2>@ViewBag.Title</h2>
    </div>
</div>

<div class="row padding-bottom-1" data-equalizer data-equalizer-mq="medium-up">
    <div class="medium-6 columns" data-equalizer-watch>
    @if (!string.IsNullOrWhiteSpace(Model.TrailerURL))
    {
        <iframe class="width-100 height-100 min-height-14" src="@Model.TrailerURL" frameborder="0" allowfullscreen></iframe>
    }
    else
    {
        <img class="width-100" src="@Model.PrimaryImageURL" alt="Game Image"/>
    }
    </div>

    <div class="medium-6 columns small-padding-top-1" data-equalizer-watch>
        @if (Model.GameSKUs.Any())
        {
            var gameRating = Model.AverageRating;
            if (gameRating.HasValue)
            {
                <div class="row">
                    <strong class="label info column bordered">Average Rating</strong>
                </div>
                <div class="row">
                    <div class="column text-center margin-bottom-1 bordered rating">
                        @Html.Partial("_RatingStarsPartial", gameRating)
                    </div>
                </div>
            }
            <p class="margin-bottom-0">
                <strong>Release Date: @Model.GameSKUs.Min(gp => gp.ReleaseDate).ToString("MMM dd, yyyy")</strong>
            </p>
        }
        <p class="margin-bottom-0">
            <strong>Players: @Model.MinimumPlayerCount</strong>
            @if (Model.MaximumPlayerCount > Model.MinimumPlayerCount)
            {
                <strong> - @Model.MaximumPlayerCount</strong>
            }
        </p>

        <h4>Tags</h4>
        <ul class="inline-list">
            @foreach (var tag in Model.Tags)
            {
                <li>@Html.ActionLink(tag.Name, "AdvancedSearch", new {tags = tag.Name}, new {@class = "button tiny secondary"})</li>
            }
        </ul>

        <div class="row">
            <div class="small-4 medium-3 large-2 columns">
                <img width="60" src="@Model.Rating.ImageURL" alt="@Model.Rating.Description"/>
            </div>
            <div class="small-8 medium-9 large-10 columns">
                <ul style="column-count: 2;">
                    @foreach (var contentDescriptor in Model.ContentDescriptors)
                    {
                        <li>@contentDescriptor.DescriptorName</li>
                    }
                </ul>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="column">
        <p class="indent">@Model.LongDescription</p>
    </div>
</div>

@if (User.IsEmployeeOrAdmin())
{
    <div class="row">
        <div class="medium-3 large-2 columns">
            @Html.ActionLink("Delete Game", "Delete", new { id = Model.Id }, new { @class = "button expand small alert" })
        </div>

        <div class="medium-3 large-2 large-offset-2 columns">
            @Html.ActionLink("Edit Game", "Edit", new { id = Model.Id }, new { @class = "button expand small" })
        </div>

        <div class="medium-3 columns">
            @Html.ActionLink("Add Physical SKU", "CreatePhysicalSKU", "GameProducts", new { id = Model.Id }, new { @class = "button expand small" })
        </div>

        <div class="medium-3 columns">
            @Html.ActionLink("Add Download SKU", "CreateDownloadSKU", "GameProducts", new { id = Model.Id }, new { @class = "button expand small" })
        </div>
    </div>
}

@foreach (var physicalGameProduct in Model.GameSKUs.OfType<PhysicalGameProduct>())
{
    <div class="row panel" data-equalizer data-equalizer-mq="medium-up">
        @{ Html.RenderPartial("~/Views/GameProducts/_GameProductPartial.cshtml", physicalGameProduct); }
        @{ Html.RenderAction("RenderPhysicalGameProductPartial", "GameProducts", physicalGameProduct); }
    </div>
}

@foreach (var downloadGameProduct in Model.GameSKUs.OfType<DownloadGameProduct>())
{
    <div class="row panel" data-equalizer data-equalizer-mq="medium-up">
        @{ Html.RenderPartial("~/Views/GameProducts/_GameProductPartial.cshtml", downloadGameProduct); }
        @{ Html.RenderPartial("~/Views/GameProducts/_DownloadGameProduct.cshtml", downloadGameProduct); }
    </div>
}

<div class="row">
    <div class="column">
        <h3>Reviews</h3>
    </div>
</div>
@{
    if (!User.IsInRole(VeilRoles.MEMBER_ROLE))
    {
         Html.RenderAction("CreateReviewForGame", "Reviews", new { game = Model });
    }
    Html.RenderAction("RenderReviewsForGame", "Reviews", new { game = Model, platform = ViewBag.Platform });
}