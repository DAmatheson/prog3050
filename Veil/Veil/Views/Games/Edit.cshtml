@using Veil.DataModels.Models
@model Game

@{
    ViewBag.Title = $"Edit '{Model.Name}'";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="medium-10 medium-centered  column">
            <h2>@ViewBag.Title</h2>
            @Html.ValidationSummary(false)

            <div class="row collapse">
                <div class="small-12 medium-4 large-2 columns">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "prefix" })
                </div>
                <div class="medium-8 large-10 columns">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "expand" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "" })
                </div>
            </div>

            <div class="row">
                <div class="medium-6 column">
                    <div class="row collapse">
                        <div class="medium-8 large-4 columns">
                            @Html.LabelFor(model => model.GameAvailabilityStatus, htmlAttributes: new { @class = "prefix" })
                        </div>
                        <div class="medium-4 large-8 columns">
                            @Html.EnumDropDownListFor(model => model.GameAvailabilityStatus, htmlAttributes: new { @class = "expand" })
                            @Html.ValidationMessageFor(model => model.GameAvailabilityStatus, "", new { @class = "" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="medium-6 column">
                    <div class="row collapse">
                        <div class="medium-8 large-4 columns">
                            @Html.LabelFor(model => model.ESRBRatingId, htmlAttributes: new { @class = "prefix" })
                        </div>
                        <div class="medium-4 large-8 columns">
                            @Html.DropDownListFor(model => model.ESRBRatingId, null, htmlAttributes: new { @class = "" })
                            @Html.ValidationMessageFor(model => model.ESRBRatingId, "", new { @class = "" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="large-6 columns">
                    <div class="row collapse">
                        <div class="medium-4 columns">
                            @Html.LabelFor(model => model.MinimumPlayerCount, htmlAttributes: new { @class = "prefix" })
                        </div>
                        <div class="medium-8 columns">
                            @Html.EditorFor(model => model.MinimumPlayerCount, new { htmlAttributes = new { @class = "expand" } })
                            @Html.ValidationMessageFor(model => model.MinimumPlayerCount, "", new { @class = "" })
                        </div>
                    </div>
                </div>
                <div class="large-6 columns">
                    <div class="row collapse">
                        <div class="medium-4 columns">
                            @Html.LabelFor(model => model.MaximumPlayerCount, htmlAttributes: new { @class = "prefix" })
                        </div>
                        <div class="medium-8 columns">
                            @Html.EditorFor(model => model.MaximumPlayerCount, new { htmlAttributes = new { @class = "expand" } })
                            @Html.ValidationMessageFor(model => model.MaximumPlayerCount, "", new { @class = "" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="row collapse">
                <div class="medium-4 large-2 columns">
                    @Html.LabelFor(model => model.PrimaryImageURL, htmlAttributes: new { @class = "prefix" })
                </div>
                <div class="medium-8 large-10 columns">
                    @Html.EditorFor(model => model.PrimaryImageURL, new { htmlAttributes = new { @class = "expand" } })
                    @Html.ValidationMessageFor(model => model.PrimaryImageURL, "", new { @class = "" })
                </div>
            </div>
            <div class="row collapse">
                <div class="medium-4 large-2 columns">
                    @Html.LabelFor(model => model.TrailerURL, htmlAttributes: new { @class = "prefix" })
                </div>
                <div class="medium-8 large-10 columns">
                    @Html.EditorFor(model => model.TrailerURL, new { htmlAttributes = new { @class = "expand" } })
                    @Html.ValidationMessageFor(model => model.TrailerURL, "", new { @class = "" })
                </div>
            </div>

            <div class="row collapse">
                <div class="medium-4 large-2 columns">
                    @Html.LabelFor(model => model.ShortDescription, htmlAttributes: new { @class = "prefix" })
                </div>
                <div class="medium-8 large-10 columns">
                    @Html.EditorFor(model => model.ShortDescription, new { htmlAttributes = new { @class = "expand" } })
                    @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "" })
                </div>
            </div>

            <div class="row collapse">
                <div class="medium-4 large-2 columns">
                    @Html.LabelFor(model => model.LongDescription, htmlAttributes: new {@class = "prefix"})
                </div>
                <div class="medium-8 large-10 columns">
                    @Html.EditorFor(model => model.LongDescription, new {htmlAttributes = new {@class = ""}})
                    @Html.ValidationMessageFor(model => model.LongDescription, "", new {@class = ""})
                </div>
            </div>

            <div class="row collapse">
                <div class="medium-4 large-2 columns">
                    @Html.LabelFor(model => model.Tags, new {@class = "prefix"})
                </div>
                <div class="medium-8 large-10 columns panel">
                    @{ Html.RenderAction("Index", "Tags", new { selected = Model.Tags.ToList() }); }
                    @Html.ValidationMessageFor(model => model.Tags, "", new { @class = "" })
                </div>
            </div>

            <div class="row">
                <div class="medium-10 column">
                    <button type="submit" class="expand">Save Changes</button>
                </div>
                <div class="medium-2 column">
                    @Html.ActionLink("Cancel", "Details", new { id = Model.Id }, new { @class = "button alert expand" })
                </div>
            </div>
        </div>
    </div>
}