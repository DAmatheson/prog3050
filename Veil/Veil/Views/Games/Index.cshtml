@using Microsoft.Ajax.Utilities
@using Veil.DataModels.Models
@using Veil.Extensions;

@model IEnumerable<Veil.DataModels.Models.Game>

@{
    ViewBag.Title = "Games";
}

<div class="row">
    <div class="column">
        <h2>@ViewBag.Title</h2>
        <p><em>Results matching search criteria "Action"</em></p>
    </div>
</div>



<div class="row">
    <a href="@Url.Action("Details", new {id = "7169E5E2-AFCF-4F55-9917-207D2076457F"})" class="button secondary text-left">
        <div class="small-3 columns">
            <img src="http://placekitten.com.s3.amazonaws.com/homepage-samples/200/140.jpg" alt="Box Art" />
        </div>
        <div class="small-6 columns">
            <h4>Game Name 1</h4>
            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quasi iusto reprehenderit voluptatem odio deleniti provident aliquam qui magnam aspernatur necessitatibus.</p>
        </div>
        <div class="small-3 columns">
            <p>Average Rating: 5.0</p>
            <p>
                <strong>New: </strong>Starting at $50
            </p>
            <p>
                <strong>Used: </strong>Starting at $30
            </p>
        </div>
    </a>
</div>

@foreach (var game in Model)
{
    <div class="row panel">
        <div class="medium-3 columns">
            <a href="@Url.Action("Details", new {id = game.Id})" class="th">
                <img src="@game.PrimaryImageURL" alt="Box Art" />
            </a>
        </div>
        <div class="medium-6 columns">
            <h4>@Html.ActionLink(game.Name, "Details", new { id = game.Id })</h4>
            <p>@game.ShortDescription</p>
        </div>
        <div class="medium-3 columns">
            @{ var rating = game.GetAverageRating(); }

            @if (rating.HasValue)
            {
                <div class="rating">
                    @{ var starsRemaining = 5; }

                    <p>Average Rating: @($"{rating:0.0}")</p>

                    @* 
                        Add at least one star, reducing the rating by 1 each time we do. 
                        Keep doing this as long as the remaining rating is at least 0.8 stars (to round up x.8 stars to full)
                        Also reduce the number of stars remaining
                    *@
                    @do
                    {
                        <i class="fa fa-star"></i>

                        rating -= 1;
                        starsRemaining -= 1;
                    } while (rating > 0.79 && starsRemaining > 0);

                    @* If we haven't used up all of the stars, and the raiting is still > 0.3, show a half star *@
                    @if (starsRemaining > 0 && rating > 0.29)
                    {
                        <i class="fa fa-star-half-o"></i>
                        starsRemaining -= 1;
                    }
                    
                    @* Add empty stars for remainng spaces *@
                    @for (int i = 0; i < starsRemaining; i++)
                    {
                        <i class="fa fa-star-o"></i>
                    }
                </div>
            }

            @if (game.GameSKUs.Any())
            {
                <p>
                    <strong>New: </strong>Starting at @($"{game.GameSKUs.Min(product => product.NewWebPrice):C}")
                </p>
            }
            @if (game.GameSKUs.Any(sku => sku.UsedWebPrice.HasValue))
            {
                <p>
                    <strong>Used: </strong>Starting at @($"{game.GameSKUs.Min(product => product.UsedWebPrice):C}")
                </p>
            }
        </div>
    </div>

}

@*
    <table class="table">
    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.PrimaryImageURL)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ShortDescription)
            </td>
        </tr>
    }
    </table>
*@