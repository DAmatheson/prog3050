@using Veil.Helpers
@model Veil.Models.GameListViewModel

@{
    ViewBag.Title = "Games";
}

<div class="row">
    <div class="column">
        <h2 class="left">@ViewBag.Title</h2>
        @Html.ActionLink("Advanced Search", "AdvancedSearch", "Games", null, new { @class = "right padding-top-1_5" })
        @if (ViewBag.SearchTerm != null && ViewBag.SearchTerm != "")
        {
            <p class="clear-both"><em>Results matching search criteria "@ViewBag.SearchTerm"</em>
            </p>
        }
    </div>
</div>

@if (Model?.Games?.Any() ?? false)
{
    foreach (var game in Model.Games)
    {
        <div class="row panel">
            <div class="medium-3 columns">
                <a href="@Url.Action("Details", new {id = game.Id})" class="th width-100 small-centered">
                    <img src="@game.PrimaryImageURL" alt="Box Art" class="width-100"/>
                </a>
            </div>
            <div class="medium-6 columns">
                <h4>@Html.ActionLink(game.Name, "Details", new {id = game.Id})</h4>
                <p>@game.ShortDescription</p>
            </div>
            <div class="medium-3 columns">
                <div class="row">
                    <div class="column">
                        @{ double? rating = game.AverageRating; }

                        @if (rating.HasValue)
                        {
                            <div class="row">
                                <strong class="label info column bordered">Average Rating</strong>
                            </div>
                            <div class="row">
                                <div class="column text-center margin-bottom-1 bordered rating">
                                    @Html.Partial("_RatingStarsPartial", rating)
                                </div>
                            </div>
                        }
                    </div>
                </div>

                @if (game.GameSKUs.Any())
                {
                    <div class="row">
                        <strong class="label success column">New</strong>
                    </div>
                    <div class="row">
                        <div class="column text-center margin-bottom-1 bordered">
                            <small>Starting at</small>&nbsp;<strong>@($"{game.GameSKUs.Min(product => product.NewWebPrice):C}")</strong>
                        </div>
                    </div>
                }
                @if (game.GameSKUs.Any(sku => sku.UsedWebPrice.HasValue))
                {
                    <div class="row">
                        <strong class="label column">Used</strong>
                        <div class="column text-center bordered">
                            <small>Starting at</small>&nbsp;<strong>@($"{game.GameSKUs.Min(product => product.UsedWebPrice):C}")</strong>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
    <div class="pagination-centered">
        <ul class="pagination small-center">

            <li class="arrow"><a href="@( Request.Url.AddParameter("page", "1").ToString())">&laquo; First</a></li>

            @for (int i = Model.StartPage; i <= Model.EndPage; i++)
            {
                string @currentClass = Model.CurrentPage == i ? "current" : "";
                <li class="@currentClass"><a href="@( Request.Url.AddParameter("page", i.ToString()).ToString())">@i</a></li>
            }

            <li class="arrow"> <a href="@( Request.Url.AddParameter("page", Model.TotalPages.ToString()).ToString())">Last &raquo;</a></li>
        </ul>
    </div>
}
else
{
    <div class="row">
        <div column="row">
            <em>No Games found</em>
        </div>
    </div>
}