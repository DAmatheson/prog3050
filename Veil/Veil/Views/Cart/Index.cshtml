@using Veil.DataModels.Models
@model Veil.Models.CartViewModel

@{
    ViewBag.Title = "Your Cart";
}

<div class="row">
    <div class="column">
        <h2>@ViewBag.Title</h2>
    </div>
</div>

@if (!Model.Cart.Items.Any())
{
    <div class="row">
        <div class="column">
            <p>Your cart is empty.</p>
        </div>
    </div>
}
else
{
    foreach (var item in Model.Cart.Items.Where(i => i.Product is PhysicalGameProduct))
    {
        var gameProduct = item.Product as PhysicalGameProduct;
        <div class="row panel" data-equalizer>
            <div class="small-2 columns" data-equalizer-watch>
                <img src="@gameProduct.BoxArtImageURL" alt="@gameProduct.PlatformCode Box Art"/>
            </div>
            <div class="small-6 columns" data-equalizer-watch>
                <h4>@gameProduct.Name</h4>
                <p class="margin-bottom-0">
                    @gameProduct.Platform.PlatformName
                </p>
                @if (item.IsNew)
                {
                    <p>New</p>
                }
                else
                {
                    <p>Used</p>
                }
            </div>
            <div class="small-4 columns" data-equalizer-watch>
                <div class="row">
                    <div class="small-6 columns">
                        <p>Unit Price:</p>
                    </div>
                    <div class="small-6 columns">
                        @if (item.IsNew)
                        {
                            <p>@item.Product.NewWebPrice.ToString("C")</p>
                        }
                        else
                        {
                            <p>@item.Product.UsedWebPrice.Value.ToString("C")</p>
                        }
                    </div>
                </div>
                <div class="row">
                    @using (Html.BeginForm("UpdateQuantity", "Cart", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        @Html.Hidden("productId", item.ProductId)
                        @Html.Hidden("isNew", item.IsNew)
                        <div class="column">
                            <label for="quantity" class="inline">Quantity:</label>
                        </div>
                        <div class="small-6 columns">
                            <input type="number" name="quantity" id="quantity" value="@item.Quantity"/>
                        </div>
                        <div class="small-6 columns">
                            <button type="submit" class="small expand">Update Qty</button>
                        </div>
                    }
                </div>
                <div class="row">
                    <div class="columns medium-6 medium-offset-6 end">
                        @using (Html.BeginForm("RemoveItem", "Cart", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()
                            @Html.Hidden("productId", item.ProductId)
                            @Html.Hidden("isNew", item.IsNew)
                            <button type="submit" class="small expand alert">Remove Item</button>
                        }
                    </div>
                </div>
            </div>
        </div>
    }

    <div class="row">
        <div class="column">
            <table class="right">
                <tr><th>Item Total:</th><td>@Model.Cart.TotalCartItemsPrice.ToString("C")</td></tr>
                <tr>
                    <th>Shipping &amp; Handling:</th>
                    <td>@Model.ShippingCost.ToString("C")</td>
                </tr>
                <tr><td colspan="2">@Html.ActionLink("Proceed to Checkout", "ShippingInfo", new { Controller = "Checkout" }, new { @class = "button expand small success margin-bottom-0" })</td></tr>
            </table>
        </div>
    </div>
}